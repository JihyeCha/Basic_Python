## 제 3장 연습문제1
# - 사용자로부터 2개의 정수를 받아서 정수의 합, 정수의 차, 정수의 곱, 정수의 평균, 큰 수, 작은 수를 계산하여 화면에 출력하는 프로그램을 작성하라.
#   파이썬이 제공하는 내장 함수 max(x, y), min(x, y)을 사용해보자.

x = int(input("x: "))   # 사용자로부터 받은 문자열은 int() 함수를 적용하여 정수로 바꾼다. x의 값 입력
y = int(input("y: "))   # y의 값 입력
print("두 정수의 합: ", x + y)   # 덧셈에는 + 사용
print("두 정수의 차: ", x - y)   # 뺄셈에는 - 사용
print("두 정수의 곱: ", x * y)   # 곱셈에는 * 사용
print("두 정수의 평균: ", (x + y) / 2)   # 평균은 자료 전체의 합을 자료의 수로 나눈 값이다.
print("큰 수: ", max(x, y))   # max(x, y)와 같이 호출하면 x와 y 중에서 큰 수(최댓값)가 반환된다.
print("작은 수: ", min(x, y))   # min(x, y)와 같이 호출하면 x와 y 중에서 작은 수(최솟값)가 반환된다.




## 제 3장 연습문제2
# - 원기둥의 부피를 계산하는 프로그램을 작성해보자.

r = float(input("r: "))   # float()은 정수를 실수형으로 표현한다.(보통 소수점을 넣어준다.)   # 원기둥의 부피는 밑면의 넓이 x 높이 이므로 반지름(radius) 값과 높이(high) 값이 필요함. r의 값 입력
h = float(input("h: "))   # h의 값 입력
vol = 3.14*r**2 * h   # 원기둥의 부피(volume) = 한 밑면의 넓이(3.14 x r^2) x 높이(h) 이다.
print("원기둥의 부피: ", vol)




## 제 3장 연습문제3
# - 사용자로부터 정수를 받아서 정수의 자리수의 합을 계산하는 프로그램을 작성해보자. 예를 들어 사용자가 1234를 입력했다면 1+2+3+4를 계산하면 된다. 
#   나머지 연산자와 정수 나눗셈 연산자 //를 적극적으로 사용해보자.

x = int(input("정수를 입력하시오: "))   # input()은 사용자의 입력을 받아 출력한다. 정수를 입력
x1000 = x // 1000   
x100 = (x % 1000) // 100   # 100의 자리수는 x % 1000으로 계산할 수 있다.
x10 = (x % 100) // 10   # 10의 자리수는 x % 100으로 계산할 수 있다.
x1 = (x % 10) // 1   # 1의 자리수는 x % 10으로 계산할 수 있다.
sum = x1000 + x100 + x10 + x1   # sum은 합을 나타낼 때 사용되는 함수이다.
print("자리수의 합:",sum)




## 제 3장 연습문제4
# - 사용자로부터 두 점의 좌표 (x1, y1)과 (x2, y2)를 입력받아서 두 점 사이의 거리를 계산하는 프로그램을 작성해보자.

x1 = int(input("x1: "))   # input()은 사용자의 입력을 받아 출력한다. x1의 값 입력
y1 = int(input("y1: "))   # y1의 값 입력
x2 = int(input("x2: "))   # x2의 값 입력
y2 = int(input("y2: "))   # y2의 값 입력
dist = ((x1 - x2)**2 + (y1 - y2)**2)**0.5   # 거리(distance), 맨 뒤의 0.5는 루트가 1/2제곱이기 때문에 0.5로 나타냈다.
print("두점 사이의 거리 = ", dist)




## 제 3장 연습문제5
# - 1번 문제에서 계산한 거리가 맞는지, 터틀그래픽으로 확인해보자. 거북이를 왼쪽으로 45도 회전하여 141만큼 전진시킨다. 
#   다시 거북이를 (0,0)으로 이동하고 0도를 가리키게 한 후에 100만큼 전진하고 왼쪽으로 90도 회전하여 100만큼 전진한다. 화면에 그려진 직선이 일치하는가?

import turtle   # turtle 모듈을 불러온다.
t = turtle.Turtle()   # turtle을 t로 선언한다.
t.shape("turtle")   # turtle 모듈의 아이콘을 거북이 모양으로 선언한다.

t.left(45)   # 왼쪽으로 45도 회전
t.forward(141)   # 앞으로 141픽셀 이동
t.setheading(0)   # 거북이의 방향을 설정하려면 setheading()을 사용하는 것이 편리하다. 0도를 가리키게 하려면 setheading(0)이 된다.
t.goto(0, 0)   # 원점(0, 0)으로 이동
t.forward(100)   # 앞으로 100픽셀 이동
t.left(90)   # 왼쪽으로 90도 회전
t.forward(100)   # 앞으로 100픽셀 이동




## 제 3장 연습문제6
# - 사용자로부터 두 점을 입력받아서 터틀 그래픽을 이용하여 두 점을 연결하는 직선을 그린다. 직선의 끝점에 직선의 길이를 계산하여 출력해보자.

import turtle   # turtle 모듈을 불러온다.
t = turtle.Turtle()   # turtle을 t로 선언한다.
t.shape("turtle")   # turtle 모듈의 아이콘을 거북이 모양으로 선언한다.

x1 = int(input("x1: "))   # input()은 사용자의 입력을 받아 출력한다. x1의 값 입력
y1 = int(input("y1: "))   # y1의 값 입력
x2 = int(input("x2: "))   # x2의 값 입력
y2 = int(input("y2: "))   # y2의 값 입력
dist = ((x1 - x2)**2 + (y1 - y2)**2)**0.5   # 거리(distance), 맨 뒤의 0.5는 루트가 1/2제곱이기 때문에 0.5로 나타냈다.
t.up()    # 거북이가 이동할 때 선이 그려지지 않게 하려면 t.up()하여 펜을 들 수 있고, 펜을 내려놓을 땐 t.down()을 사용
t.goto(x1, y1)   # goto(x1, y1)으로 첫 번째 점으로 이동
t.down()   # 펜을 내려놓는다.
t.goto(x2, y2)   # goto(x2, y2)으로 두 번째 점으로 이동
t.write("점의 길이 = " + str(dist))   # 정수 변수는 str()을 적용하여 문자열로 변환할 수 있다.




## 제 3장 연습문제7
# - 파이썬에서 time()을 호출하면 1970년 1월 1일 이후 흘러온 전체 초가 반환된다. 이것을 적절하게 나누거나 나머지를 구해서 현재 시간의 시와 분을 계산할 수 있을까?

# 전체 초를 60으로 나누어서 몫을 구하면 전체 분이 된다. 이것을 60으로 나눈 나머지가 현재 분이 된다.

import time   # 시간 모듈을 불러온다. 시간을 볼 수 있는 함수 설정
fseconds = time.time()   # 초 단위로 시간을 설정
total_sec = int(fseconds)   # 전체 초 수
total_min = total_sec // 60    # 정수 나눗셈 연산자 //이용, 전체 분 = 전체 초 / 60
minute = total_min % 60   # 분
total_hour = total_min // 60   # 전체 시간 = 전체 분 / 60
hour = total_hour % 24   # 시간
print("현재 시간(영국 그리니치 시각): " + str(hour) + "시" + str(minute) + "분")   # 화면에 현재시간 시와 분을 출력, 정수 변수는 str()을 적용하여 문자열로 변환할 수 있음.




## 제 3장 연습문제8
# - 움직이는 물체의 운동에너지를 계산해보자. 물체의 에너지를 계산하는 식은 1/2*무게*속도*2이다.

mass = float(input("물체의 무게를 입력하시오(kg)): "))   # 무게(mass), float()은 정수를 실수형으로 표현함.(보통 소수점을 넣어줌)
velocity = float(input("물체의 속도를 입력하시오(m/s): "))   # 속도(velocity)
energy = 0.5 * mass * velocity **2   # 지수 연산자 **을 사용, 물체의 에너지 = 1/2 * 무게 * 속도 * 2
print("물체는 " + str(energy) + " (J)의 에너지를 가지고 있다.")   # 정수 변수는 str()을 적용하여 문자열로 변환 가능, 에너지의 단위는 J

